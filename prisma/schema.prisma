// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccessPoint {
  id Int @id @default(autoincrement())
  bssid String @unique
  ssid String
  description String
  fingerprints FingerprintDetail[]
  coordinate Coordinate @relation(fields: [coordinateId], references: [id], onDelete: Cascade)
  coordinateId Int @unique
}

model Fingerprint {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  fingerprintDetails FingerprintDetail[]
  location Room @relation(fields: [locationId], references: [id])
  locationId Int
}

model FingerprintDetail {
  id Int @id @default(autoincrement())
  fingerprint Fingerprint @relation(fields: [fingerprintId], references: [id])
  fingerprintId Int @unique
  ap AccessPoint @relation(fields: [bssid], references: [bssid] )
  bssid String
  rssi Float
}

model Floor {
  id Int @id @default(autoincrement())
  name String
  level Int
  rooms Room[]
}

model Room {
  id Int @id @default(autoincrement())
  name String
  floor Floor @relation(fields: [floorId], references: [id])
  floorId Int 
  coordinates Coordinate[] @relation(name: "coordinateOf")
  centroid Coordinate @relation(name: "centroidOf", fields: [centroidId], references: [id])
  centroidId Int @unique
  fingerprints Fingerprint[]
  schedules Schedule[]
}

model Coordinate {
  id Int @id @default(autoincrement())
  x Float
  y Float
  room Room? @relation(fields: [roomId], references: [id], name: "coordinateOf")
  roomId Int?
  centroidOf Room? @relation(name: "centroidOf")
  ap AccessPoint?
}

model User {
  npm Int @id
  subjects Subject[]
}

model Subject {
  id Int @id @default(autoincrement())
  name String
  schedules Schedule[]
  students User[]
}

model Schedule {
  id Int @id @default(autoincrement())
  room Room @relation(fields: [roomId], references: [id])
  roomId Int
  Subject Subject @relation(fields: [subjectId], references: [id])
  subjectId Int
  startTime DateTime @db.Timestamptz()
  endTime DateTime @db.Timestamptz()
  day dayOfWeek
}

enum dayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}